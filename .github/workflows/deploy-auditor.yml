name: Deploy Auditor Agent to Cloud Run (Production-Grade)

on:
  push:
    branches:
      - main # Deploys when pushing to the main branch
    paths:
      - "auditor-agent/**"
      - "shared/**"
      - ".github/workflows/deploy-auditor.yml"

jobs:
  deploy:
    name: Build, Scan, and Deploy Auditor Agent
    runs-on: ubuntu-latest

    steps:
      # 1. Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Set up the Google Cloud SDK (gcloud)
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # 4. Configure Docker to push to Google Artifact Registry
      - name: Authorize Docker push
        run: gcloud auth configure-docker "europe-west1-docker.pkg.dev" --quiet

      # 5. Build the Docker image
      - name: Build Docker image
        run: |
          docker build \
            -f auditor-agent/Dockerfile \
            -t "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:${{ github.sha }}" \
            -t "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:latest" \
            --label "git-commit=${{ github.sha }}" \
            --label "build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
            .

      # 6. Scan Docker image for vulnerabilities (using Trivy)
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
          exit-code: "0"

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

      # 7. Push the Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:${{ github.sha }}"
          docker push "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:latest"

      # 8. Deploy the container image to Cloud Run with production settings
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: auditor-agent
          region: "europe-west1"
          image: "europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:${{ github.sha }}"
          flags: |
            --memory=1Gi
            --cpu=2
            --timeout=60
            --min-instances=0
            --max-instances=20
            --concurrency=100
            --port=8081
            --allow-unauthenticated
            --cpu-throttling
            --execution-environment=gen2
            --service-account=${{ secrets.CLOUD_RUN_SA_EMAIL }}
            --set-env-vars GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }},GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }},GCP_REGION=europe-west1,ENVIRONMENT=production

      # 9. Output the URL of the deployed service
      - name: Show Deployed URL
        run: |
          echo "‚úÖ Auditor Agent deployed successfully!"
          echo "üîó URL: ${{ steps.deploy.outputs.url }}"
          echo "üì¶ Image: europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/flowshare-repo/auditor-agent:${{ github.sha }}"

      # 10. Health check the deployed service
      - name: Health check deployed service
        run: |
          sleep 10
          response=$(curl -s -o /dev/null -w "%{http_code}" "${{ steps.deploy.outputs.url }}/health")
          if [ $response -eq 200 ]; then
            echo "‚úÖ Health check passed!"
          else
            echo "‚ùå Health check failed with status code: $response"
            exit 1
          fi
